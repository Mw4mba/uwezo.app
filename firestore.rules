rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to make rules more readable
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // User Profile Rules
    match /users/{userId} {
      // A user can read or update their own profile.
      allow read, update: if isOwner(userId);
      // A user can create their own profile document.
      allow create: if isOwner(userId);

      // Quiz Attempts Subcollection
      match /quizAttempts/{attemptId} {
        // A user can create and read their own quiz attempts.
        allow read, create: if isOwner(userId);
      }
    }

    // Chat Rules
    match /chats/{chatId} {
      // Allow a user to read a chat document if they are a participant.
      allow get: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      // IMPORTANT: Allow a user to LIST (query) chats if their UID is in the 'participants' array.
      // This is crucial for the getOrCreateChat function to work.
      allow list: if isSignedIn() && request.auth.uid in request.query.filters[0][2];

      // Allow a user to create a chat if their UID is in the participants list.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;

      // Messages Subcollection
      match /messages/{messageId} {
        // Allow reading and creating messages if the user is a participant of the parent chat.
        // This uses a 'get()' to check the parent document's data securely.
        allow read, create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}
