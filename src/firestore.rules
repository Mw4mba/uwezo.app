
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to improve readability and reuse logic
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read or update their own document.
      allow read, update: if isUser(userId);
      
      // A user can create their own document, but not one for someone else.
      allow create: if isUser(userId);

      // Rules for the 'quizAttempts' subcollection
      match /quizAttempts/{attemptId} {
        // A user can create and read their own quiz attempts.
        allow read, create: if isUser(userId);
      }
    }
    
    // Rules for the top-level 'chats' collection
    match /chats/{chatId} {
      // Allow reading a chat document if the user is a participant.
      allow get, list: if isSignedIn() && request.auth.uid in resource.data.participants;
      
      // Allow creating a chat if the user is one of the participants being added.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participants;
      
      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
        // Allow reading messages if the user is a participant of the parent chat.
        // This requires checking the parent chat document's data.
        allow list, get: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        
        // Allow creating a message if the user is the sender and is a participant of the chat.
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.senderId && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}
